name: CI



on:
  push:
    branches:
      - master
      - development
    tags:
      - '**'
  pull_request: { }



jobs:

  test:
    name: "test ${{ matrix.os }} ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #                os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
        os: [ 'ubuntu-latest' ]
    #        python-version: [ '3.9' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: |
          python -m pip install -U pip
          pip install -r requirements/main.txt -r requirements/testing.txt

      - name: Make coverage directory
        run: mkdir coverage

      - name: Test with coverage
        run: coverage run -m pytest tests
        env:
          COVERAGE_FILE: coverage/.coverage.${{ matrix.os }}.${{ matrix.python-version }}
          CONTEXT: ${{ matrix.os }}-py${{ matrix.python-version }}

      - name: Store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  coverage-combine:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage

      - run: pip install coverage[toml]

      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "hermaeus coverage for ${{ github.sha }}"

      - name: Store coverage html
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: htmlcov

  release:
    needs: coverage-combine
    if: needs.test.outputs.result == 'success' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install
        run: pip install -U build

      - name: Build
        run: python -m build

      - name: Upload package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}